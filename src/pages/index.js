import Head from "next/head";
import Message from "components/Message";
import React, { useEffect, useState } from "react";
import { auth, db } from "../../utils/firebase";
import { useAuthState } from "react-firebase-hooks/auth";
import { useRouter } from "next/router";
import {
  addDoc,
  collection,
  serverTimestamp,
  query,
  orderBy,
  onSnapshot,
} from "firebase/firestore";
import Link from "next/link";

export default function Home() {
  const router = useRouter();
  const [user, loading] = useAuthState(auth);

  //create state with all posts
  const [allPosts, setAllPosts] = useState([]);
  const [searchTerm, setSearchTerm] = React.useState("");

  const getPosts = async () => {
    const collectionRef = collection(db, "posts");
    const q = query(collectionRef, orderBy("timestamp", "desc"));
    const unsubscribe = onSnapshot(q, (snapshot) => {
      setAllPosts(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));
    });
    return unsubscribe;
  };

  useEffect(() => {
    getPosts();
    if (!user) {
      setAllPosts([]);
    }
  }, []);

  const handleSearch = (event) => {
    setSearchTerm(event.target.value);
  };

  const filteredData = allPosts.filter((item) =>
    `${item.name}`.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <>
      <Head>
        <title>Simple Student Organizer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mb-10">
        <h2 className="text-2xl font-bold mb-2">Student List</h2>
        <h3 className="text-lg font-medium py-2">Search </h3>
        <input
          onChange={handleSearch}
          value={searchTerm}
          type="text"
          class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 mb-4"
          placeholder="Search"
          required
        />
        {filteredData.length === 0 && (
          <h2 className="text-xl font-medium mb-2 text-center my-36">
            No student found
          </h2>
        )}

        <div class="grid grid-cols-3 gap-2">
          {filteredData.map((post) => {
            console.log(post, "y");
            return <Message {...post} key={post.key} />;
          })}
        </div>
      </main>
    </>
  );
}
